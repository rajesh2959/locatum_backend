(function () {
    'use strict';
    angular
        .module('app.drawfloorplan')
        .controller('drawfloorplanController', controller);
    controller.$inject = ['messagingService', 'notificationBarService', 'session', 'navigation', 'drawfloorservice', '$rootScope', 'sid', 'spid', 'title', 'desc', '$window'];
    /* @ngInject */

    function controller(messagingService, notificationBarService, session, navigation, drawfloorservice, $rootScope, sid, spid, title, desc, $window) {
        var vm = this;
        vm.latLngList = [];
        var cid = session.cid;
        var element;
        var floorWidth = 1200;
        var floorHeight = 600;
        var canvas;
        var isRedoing = false;
        var h = [];
        var drawnObj, isMouseDown;
        vm.selectedFont = "helvetica";
        vm.textSize = 50;
        vm.imgWidth = 1200;
        vm.imgHeight = 600;
        vm.strokeColor = "#ffffff";
        vm.strokewidth = 2;

        function init(id) {
            $("#pageTitle").html(title);
            canvas = new fabric.Canvas(id);
            $('.colorpicker').colorpicker();
            fabric.util.addListener(document.getElementsByClassName('upper-canvas')[0], 'contextmenu', function (e) {
                e.preventdefault();
            });
            if (spid != '' && spid != null && spid != 0) {
                var loadingjson = '';
                console.log(spid);
                drawfloorservice.getFloorData(spid).then(function (response) {
                    loadingjson = response;
                    if (loadingjson != '' && loadingjson != undefined) {
                        canvas.loadFromJSON(loadingjson, canvas.renderAll.bind(canvas), function (o, object) {
                            fabric.log(o, object);
                            canvas.renderAll();
                        });
                        canvas.setWidth(loadingjson.width);
                        canvas.setHeight(loadingjson.height);
                        $('input[name="width"]').val(loadingjson.width);
                        $('input[name="height"]').val(loadingjson.height);
                    }
                });
            } else {
                var canvasHeight = canvas.height;
                var canvasWidth = canvas.width;
                var bgImg = new fabric.Image();

                drawnObj = new fabric.Rect({
                    width: canvasWidth - 1,
                    height: canvasHeight - 1,
                    top: 0,
                    left: 0,
                    fill: 'transparent',
                    stroke: 'black',
                    strokeWidth: 1
                });
                canvas.setBackgroundImage(drawnObj);
                canvas.renderAll();
            }

            $(window).keydown(function (e) {
                switch (e.keyCode) {
                    case 46: // delete
                        var activeObject = canvas.getActiveObject(),
                            activeGroup = canvas.getActiveGroup();

                        if (activeObject) {
                            if (confirm('Are you sure?')) {
                                var status = canvas.remove(activeObject);
                            }
                            return false;
                        }
                        else if (activeGroup) {
                            if (confirm('Are you sure?')) {
                                var objectsInGroup = activeGroup.getObjects();
                                canvas.discardActiveGroup();
                                objectsInGroup.forEach(function (object) {
                                    canvas.remove(object);
                                });
                            }
                            return false;
                        }
                    case 90:
                        if (e.ctrlKey && e.shiftKey) {
                            vm.redo();
                        }
                        else if (e.ctrlKey) {
                            vm.undo();
                        }
                }
                return; //using "return" other attached events will execute
            });

            $('.draw-container').ruler({
                vrulesize: 18,
                hrulesize: 18,
                showcrosshair: false,
                showmousepos: false
            });

            canvas.on('object:added', function () {
                if (!isRedoing) {
                    h = [];
                }
                isRedoing = false;
            });

            canvas.on('object:selected', function () {
                var o = canvas.getActiveObject();
                var t;
                if (o) {
                    t = o.get('type');
                }

                if (o && t === 'i-text') {
                    var fsize = o.get('fontSize');
                    var ffamily = o.get('fontFamily');
                    $('input[name="fontsize"]').val(fsize);
                    $('#font-family').val(ffamily);
                }

                if (o) {
                    vm.opacity = o.get('opacity');
                    $('input[name="objectOpacity"]').val(vm.opacity);
                    vm.stroke = o.get('stroke');
                    $('input[name="strokeColor"]').val(vm.stroke);
                    vm.strokeWidth = o.get('strokeWidth');
                    $('input[name="strokewidth"]').val(vm.strokeWidth);
                }
            });
        };

        vm.undo = function () {
            if (canvas._objects.length > 0) {
                h.push(canvas._objects.pop());
                canvas.renderAll();
            }
        };

        vm.redo = function () {
            if (h.length > 0) {
                isRedoing = true;
                canvas.add(h.pop());
            }
        };

        vm.goBack = function () {
            $window.history.back();
        };

        vm.changeWidth = function (width) {
            var newWidth = width;
            if (newWidth >= 100) {
                canvas.setWidth(newWidth);
                canvas.renderAll();
            }
            drawnObj = new fabric.Rect({
                width: canvas.width - 1,
                height: canvas.height - 1,
                top: 0,
                left: 0,
                fill: 'transparent',
                stroke: 'black',
                strokeWidth: 1
            });
            canvas.setBackgroundImage(drawnObj);
            canvas.renderAll();
        };

        vm.changeHeight = function (height) {
            var newHeight = height;
            if (newHeight >= 100) {
                canvas.setHeight(newHeight);
                canvas.renderAll();
            }
            drawnObj = new fabric.Rect({
                width: canvas.width - 1,
                height: canvas.height - 1,
                top: 0,
                left: 0,
                fill: 'transparent',
                stroke: 'black',
                strokeWidth: 1
            });
            canvas.setBackgroundImage(drawnObj);
            canvas.renderAll();
        };

        vm.changeBg = function (event) {
            $(event.currentTarget).colorpicker().on('changeColor', function () {
                canvas.backgroundColor = $(this).colorpicker('getValue', '#ffffff');
                canvas.renderAll();
            });
        };

        vm.addTxt = function () {
            canvas.add(new fabric.IText('Tap and Type', {
                left: 50,
                top: 100,
                fontFamily: 'Roboto',
                fill: '#333',
                fontSize: 50
            }));
            canvas.renderAll();
        };

        vm.changeTxtColor = function (event) {
            $(event.currentTarget).colorpicker().on('changeColor', function () {
                if (canvas.getActiveObject()) {
                    canvas.getActiveObject().setFill($(this).colorpicker('getValue', '#ffffff'));
                    canvas.renderAll();
                }
            });
        };

        vm.chageFamily = function (value) {
            var fontFamily = value;
            if (canvas.getActiveObject()) {
                canvas.getActiveObject().set({ fontFamily: fontFamily });
                canvas.renderAll();
            }
        };

        vm.changeFontSize = function (size) {
            var FontSize = size;
            if (canvas.getActiveObject()) {
                canvas.getActiveObject().setFontSize(FontSize);
                canvas.renderAll();
            }
        };

        vm.drawObjec = function (val) {
            canvas.deactivateAllWithDispatch();
            canvas.renderAll();
            vm.drawObj(val);
            canvas.defaultCursor = 'crosshair';
        };

        vm.disableDraw = function () {
            canvas.off('mouse:down');
            canvas.off('mouse:move');
            canvas.off('mouse:up');

            canvas.selection = true;
            canvas.forEachObject(function (o) {
                o.selectable = true;
            });
        };

        vm.drawObj = function (objType) {

            $(document).keyup(vm.escHandler);
            canvas.selection = false;
            canvas.forEachObject(function (o) {
                o.selectable = false;
            });

            canvas.on('mouse:down', function (o) {
                $(document).unbind("keyup", vm.escHandler);
                isMouseDown = true;
                var pointer = canvas.getPointer(o.e);
                if (objType === 'line') {
                    var points = [pointer.x, pointer.y, pointer.x, pointer.y];
                    drawnObj = new fabric.Line(points, {
                        fill: '#000',
                        stroke: '#000',
                        originX: 'center',
                        originY: 'center',
                        strokeWidth: 2,
                    });
                } else if (objType === 'square') {
                    drawnObj = new fabric.Rect({
                        width: 0,
                        height: 0,
                        top: pointer.y,
                        left: pointer.x,
                        fill: 'transparent',
                        stroke: 'black',
                        strokeWidth: 1
                    });
                } else if (objType === 'rounded-rect') {
                    drawnObj = new fabric.Rect({
                        width: 0,
                        height: 0,
                        top: pointer.y,
                        left: pointer.x,
                        rx: 10,
                        ry: 10,
                        fill: 'transparent',
                        stroke: 'black',
                        strokeWidth: 1
                    });
                } else if (objType === 'circle') {
                    drawnObj = new fabric.Circle({
                        radius: 0,
                        top: pointer.y,
                        left: pointer.x,
                        fill: 'transparent',
                        stroke: 'black',
                        strokeWidth: 1
                    });
                }
                else if (objType === 'arc') {
                    drawnObj = new fabric.Circle({
                        radius: 0,
                        top: pointer.y,
                        left: pointer.x,
                        startAngle: 0,
                        endAngle: Math.PI,
                        fill: 'transparent',
                        stroke: 'black',
                        strokeWidth: 1
                    });
                }
                else if (objType === 'circle2') {
                    drawnObj = new fabric.Path('m77 76.9a196 196 0 0 1 196 196h-196z', {
                        radius: 0,
                        top: pointer.y,
                        left: pointer.x,
                        fill: 'transparent',
                        stroke: 'black',
                        strokeWidth: 1
                    });
                } else if (objType === 'illness') {
                    var path1 = new fabric.Circle({
                        radius: 2.211,
                        cx: '10.201',
                        cy: '9.904',
                        fill: 'black'
                    });
                    var path2 = new fabric.Path('M14.911,10.868c-0.494-0.024-0.977,0.154-1.335,0.495c-0.359,0.341-0.563,0.814-0.563,1.309v2.083h12.044    c0.189,0,0.358-0.12,0.422-0.3c0.062-0.179,0.004-0.378-0.144-0.496C24.023,12.913,20.968,11.175,14.911,10.868z', {
                        fill: 'black'
                    });
                    var path3 = new fabric.Path('M11.306,14.381c0-0.567-0.394-1.059-0.949-1.182l-4.055-0.898c-0.205-0.045-0.418,0.005-0.582,0.136    c-0.164,0.132-0.258,0.33-0.258,0.539v1.714h5.844V14.381z', {
                        fill: 'black'
                    });
                    var path4 = new fabric.Path('M30.283,21.196v-8.735c0-0.635-0.514-1.15-1.149-1.15c-0.635,0-1.147,0.516-1.147,1.15v3.475H3.754V6.707    c0-0.638-0.514-1.15-1.149-1.15c-0.636,0-1.149,0.513-1.149,1.15v14.489C0.594,21.627,0,22.519,0,23.549    C0,25,1.181,26.181,2.631,26.181S5.262,25,5.262,23.549c0-1.051-0.618-1.959-1.508-2.381v-2.08h24.23v2.08    c-0.891,0.422-1.508,1.33-1.508,2.381c0,1.451,1.18,2.632,2.631,2.632s2.631-1.181,2.631-2.632    C31.738,22.521,31.145,21.627,30.283,21.196z M4.111,23.549c0,0.814-0.663,1.479-1.479,1.479s-1.48-0.664-1.48-1.479    c0-0.338,0.114-0.65,0.305-0.899v0.171c0,0.637,0.513,1.151,1.149,1.151c0.635,0,1.149-0.515,1.149-1.151v-0.234    C3.977,22.845,4.111,23.182,4.111,23.549z M29.107,25.028c-0.816,0-1.479-0.664-1.479-1.479c0-0.367,0.134-0.704,0.356-0.963    v0.232c0,0.639,0.514,1.152,1.148,1.152c0.637,0,1.148-0.516,1.148-1.152v-0.168c0.191,0.247,0.305,0.561,0.305,0.896    C30.587,24.364,29.923,25.028,29.107,25.028z', {
                        fill: 'black'
                    });
                    drawnObj = new fabric.Group([path1, path2, path3, path4], { left: pointer.x, top: pointer.y });
                }
                else if (objType === 'chair') {
                    drawnObj = new fabric.Path('M160.419,116.441c-0.491,0-0.892,0.4-0.892,0.894v5.137c0,1.319-0.958,2.414-2.216,2.635 	c-0.281-0.729-1.289-1.236-2.701-1.236h-3.982l0.053-0.52c0.021-0.227,0.032-0.439,0.032-0.655h3.897 	c1.967,0,3.442-1.602,3.279-3.561l-1.194-14.323c-0.164-1.958-1.906-3.562-3.874-3.562h-7.147c-1.968,0-3.707,1.603-3.873,3.562 	l-1.194,14.322c-0.162,1.958,1.312,3.561,3.279,3.561h3.897c0,0.211,0.009,0.429,0.033,0.655l0.054,0.521h-3.983 c-1.411,0-2.42,0.508-2.7,1.236c-1.255-0.223-2.216-1.315-2.216-2.635v-5.135c0-0.493-0.399-0.894-0.893-0.894  c-0.492,0-0.893,0.4-0.893,0.894v5.137c0,2.464,2.003,4.472,4.47,4.472h0.244c0.873,0.752,2.333,1.282,3.776,1.282h2.631l0.476,4.75 h-2.354c-2.182,0-4.328,1.225-4.89,2.789l-0.657,1.838c-0.51,0.067-0.904,0.394-0.904,0.808c0,0.462,0.488,0.838,1.088,0.838 	c0.601,0,1.09-0.376,1.09-0.838c0-0.257-0.158-0.474-0.391-0.626l0.614-1.718c0.427-1.193,2.28-2.196,4.047-2.196h2.378v3.783 	c-0.376,0.131-0.641,0.419-0.641,0.757c0,0.462,0.489,0.838,1.087,0.838c0.599,0,1.09-0.372,1.09-0.838 	c0-0.34-0.267-0.626-0.644-0.757v-3.783h2.378c1.767,0,3.621,1.007,4.046,2.196l0.615,1.718c-0.232,0.154-0.392,0.369-0.392,0.626 	c0,0.462,0.49,0.838,1.09,0.838c0.601,0,1.09-0.376,1.09-0.838c0-0.414-0.394-0.741-0.904-0.808l-0.658-1.838 	c-0.562-1.567-2.71-2.789-4.889-2.789h-2.355l0.476-4.75h2.633c1.441,0,2.904-0.529,3.772-1.282h0.245 	c2.464,0,4.472-2.004,4.472-4.472v-5.137C161.312,116.843,160.91,116.441,160.419,116.441z M144.921,107.952h8.653 	c0.248,0,0.447,0.199,0.447,0.447c0,0.246-0.199,0.447-0.447,0.447h-8.653c-0.248,0-0.446-0.201-0.446-0.447 	C144.475,108.152,144.673,107.952,144.921,107.952z M144.921,110.633h8.653c0.248,0,0.447,0.2,0.447,0.446s-0.199,0.447-0.447,0.447 	h-8.653c-0.248,0-0.446-0.2-0.446-0.447C144.475,110.835,144.673,110.633,144.921,110.633z M144.921,114.21 	c-0.248,0-0.446-0.2-0.446-0.447s0.198-0.445,0.446-0.445h8.653c0.248,0,0.447,0.199,0.447,0.445s-0.199,0.447-0.447,0.447H144.921z', {
                        top: pointer.y,
                        left: pointer.x,
                        fill: 'black'
                    });
                } else if (objType === 'door') {
                    drawnObj = new fabric.Path(
                        'M17.83,23.082H5.208v-5.554H17.83V23.082z M17.83,23.082h11.864v5.561H17.83V23.082z M17.83,11.248h11.864V5.685H17.83V11.248z M17.83,11.248					c-6.969,0-12.622,5.3-12.622,11.834', {
                            top: pointer.y,
                            left: pointer.x,
                            fill: 'transparent',
                            stroke: '#010101',
                            strokeWidth: 0.7088,
                            strokemiterlimit: '10'
                        });
                } else if (objType === 'maindoor') {
                    drawnObj = new fabric.Path('M5.971,31.84l3.801-0.331l3.307-1.157l3.141-1.984l2.645-2.81l1.984-2.976l1.322-3.636l0.496-3.472l0.33,3.472l1.156,3.636 	l1.984,2.976l2.645,2.81l3.141,1.984l3.471,1.157l3.637,0.331 M5.971,16.466h0.66V31.84 M5.971,15.475v16.53 M39.029,15.475v16.53 M38.367,31.84V16.466h0.662 M5.144,15.987v-0.992h34.878v0.992', {
                        top: pointer.y,
                        left: pointer.x,
                        fill: 'transparent',
                        stroke: '#4E4E4E',
                        strokeWidth: 0.36,
                        strokemiterlimit: '10',
                        strokeLinejoin: 'round',
                    });
                } else if (objType === 'door-open') {
                    drawnObj = new fabric.Path('M40.352,37.422C40.35,28.6,37.258,21.1,31.168,15.013C24.9,8.748,17.396,5.66,8.575,5.664H6.81H4.691 M40.354,37.422L4.828,37.32 l0.104,1.967 M4.614,39.289l35.773,0.047l-0.1-1.979 M4.693,5.669l-0.079,33.62', {
                        radius: 0,
                        top: pointer.y,
                        left: pointer.x,
                        fill: 'transparent',
                        stroke: '#010101',
                        strokeWidth: 0.8,
                        strokeLinecap: 'round',
                        strokeLinejoin: 'round',
                        strokeMiterlimit: 10
                    });

                } else if (objType === 'bath') {

                    drawnObj = new fabric.Path('	M21.558,1.036l0.171,2.742h1.543l0.171-2.742 M21.6,1.038h-4.37c-1.285,0-2.398,0.428-3.256,1.371	c-0.942,0.857-1.456,1.971-1.456,3.256v33.758c0,1.285,0.514,2.313,1.456,3.256c0.856,0.857,1.971,1.285,3.256,1.285h10.712 c1.285,0,2.313-0.428,3.254-1.285c0.857-0.942,1.287-1.971,1.287-3.256V5.665c0-1.285-0.43-2.399-1.287-3.256 	c-0.939-0.943-1.969-1.371-3.254-1.371h-4.457', {
                        radius: 0,
                        top: pointer.y,
                        left: pointer.x,
                        fill: 'transparent',
                        stroke: '#010101',
                        strokeWidth: 0.5,
                        strokeLinecap: 'round',
                        strokeLinejoin: 'round',
                        strokeMiterlimit: 10
                    });
                } else if (objType === 'wifi') {
                    drawnObj = new fabric.Path('	M21.03,33.334c0.816-0.816,2.14-0.816,2.955,0 	c0.817,0.816,0.817,2.139,0,2.956c-0.814,0.814-2.138,0.814-2.955,0C20.214,35.473,20.214,34.15,21.03,33.334z M28.396,30.572 	c-0.429,0-0.858-0.156-1.171-0.489c-2.597-2.597-6.815-2.597-9.412,0c-0.645,0.646-1.699,0.646-2.364,0 	c-0.644-0.644-0.644-1.699,0-2.361c3.886-3.887,10.234-3.887,14.12,0c0.644,0.644,0.644,1.698,0,2.361 	C29.238,30.416,28.827,30.572,28.396,30.572z M34.256,24.714c-0.43,0-0.859-0.156-1.172-0.489c-5.838-5.838-15.33-5.838-21.149,0 	c-0.645,0.646-1.699,0.646-2.363,0c-0.644-0.644-0.644-1.699,0-2.362c7.128-7.128,18.748-7.128,25.875,0 	c0.644,0.644,0.644,1.699,0,2.362C35.115,24.538,34.686,24.714,34.256,24.714z M40.211,18.757c-0.429,0-0.858-0.156-1.171-0.488 	c-9.12-9.12-23.941-9.12-33.061,0c-0.645,0.645-1.699,0.645-2.363,0c-0.645-0.645-0.645-1.699,0-2.363 	c10.409-10.409,27.358-10.409,37.768,0c0.645,0.644,0.645,1.699,0,2.363C41.071,18.601,40.642,18.757,40.211,18.757z', {
                        top: pointer.y,
                        left: pointer.x,
                        fill: 'transparent',
                        stroke: '#000000',
                        strokeWidth: 0.5,
                        strokeLinecap: 'round',
                        strokeLinejoin: 'round',
                        strokeMiterlimit: 10
                    });
                } else if (objType === 'bluetooth') {
                    drawnObj = new fabric.Path('M699.404,238.121l0.021,10.246l-4.946-4.469l-0.8,0.885l5.461,4.934l-5.501,4.916l0.795,0.89l4.992-4.461l-0.021,10.945 	l6.178-6.95l-4.918-5.182l4.926-5.566L699.404,238.121z M703.953,244.359l-3.342,3.776l-0.014-7.134L703.953,244.359z 	 M700.598,258.87l0.014-7.318l3.352,3.531L700.598,258.87z M700,233c-5.92,0-10.736,4.816-10.736,10.737v12.525 	c0,5.921,4.816,10.737,10.736,10.737c5.92,0,10.737-4.816,10.737-10.737v-12.525C710.736,237.817,705.92,233,700,233z 	 M709.545,256.263c0,5.263-4.283,9.544-9.545,9.544c-5.262,0-9.543-4.281-9.543-9.544v-12.525c0-5.263,4.282-9.544,9.543-9.544 	c5.262,0,9.545,4.281,9.545,9.544V256.263z', {
                        top: pointer.y,
                        left: pointer.x,
                        fill: '#000',
                    });
                } else if (objType === 'conference') {
                    drawnObj = new fabric.Path('M7.097,50.018v-9.941h4.469 M8.044,50.018v-9.941 M11.566,50.018H7.097 M11.566,10.72h19.887v43.522H11.566V10.72z M35.902,50.018 	v-9.941h-4.449 M34.956,50.018v-9.941 M31.453,50.018h4.449 M16.623,58.73h9.943v-4.469 M16.623,57.785h9.943 M16.623,54.262v4.469 M16.623,6.269h9.943v4.45 M16.623,7.216h9.943 M16.623,10.719v-4.45 M7.097,37.689v-9.942h4.469 M8.044,37.689v-9.942 	 M11.566,37.689H7.097 M35.902,37.689v-9.942h-4.449 M34.956,37.689v-9.942 M31.453,37.689h4.449 M7.097,25.36v-9.943h4.469 M8.044,25.36v-9.943 M11.566,25.36H7.097 M35.902,25.36v-9.943h-4.449 M34.956,25.36v-9.943 M31.453,25.36h4.449', {
                        top: pointer.y,
                        left: pointer.x,
                        fill: 'transparent',
                        stroke: '#010101',
                        strokeWidth: 0.4,
                        strokeMiterlimit: 10
                    });
                } else if (objType === 'reception') {
                    drawnObj = new fabric.Path('M716.927,248.833h-4.086v-1.167c0-0.351-0.232-0.584-0.582-0.584v-1.167c0.35,0,0.582-0.233,0.582-0.584 c0-2.276-1.809-4.086-4.086-4.086c-2.275,0-4.085,1.81-4.085,4.086c0,0.351,0.232,0.584,0.584,0.584v1.167 c-0.352,0-0.584,0.233-0.584,0.584v1.167h-6.946v-3.502c0-1.692-0.816-3.269-2.218-4.261c-0.234-0.117-0.525-0.117-0.701,0 	c-1.401,0.992-3.327,0.992-4.728,0c-0.233-0.117-0.525-0.117-0.7,0c-1.401,0.992-2.218,2.568-2.218,4.261v3.502h-4.086 	c-0.35,0-0.583,0.233-0.583,0.584v3.501c0,0.352,0.233,0.584,0.583,0.584v12.258c0,0.992,0.759,1.75,1.751,1.75h30.353 	c0.992,0,1.75-0.758,1.75-1.75v-12.258c0.352,0,0.584-0.232,0.584-0.584v-3.501C717.511,249.066,717.278,248.833,716.927,248.833z 	 M708.755,242.413c1.402,0,2.568,0.992,2.861,2.334h-5.721C706.187,243.405,707.354,242.413,708.755,242.413z M706.421,245.915h4.67 	v1.167h-4.67V245.915z M705.837,248.25h5.838v0.583h-5.838V248.25z M692.412,243.229l0.992,1.051l-0.992,1.692l-0.992-1.692 L692.412,243.229z   M688.326,245.331c0-1.167,0.525-2.276,1.401-3.094c0.453,0.275,0.942,0.474,1.447,0.597l-0.921,0.921 	c-0.233,0.176-0.233,0.467-0.117,0.7l1.751,2.919c0.117,0.175,0.292,0.292,0.525,0.292s0.408-0.117,0.525-0.292l1.751-2.919 c0.117-0.233,0.058-0.524-0.117-0.7l-0.921-0.921c0.505-0.123,0.994-0.321,1.447-0.597c0.875,0.817,1.4,1.927,1.4,3.094v3.502 	h-8.171V245.331z M683.657,250.001h4.086h9.338h8.173h7.005h4.084v2.333h-32.686V250.001z M715.761,261.674h-3.502 	c-0.352,0-0.584,0.234-0.584,0.584s0.232,0.584,0.584,0.584h3.502v1.166h-3.502c-0.352,0-0.584,0.234-0.584,0.584 c0,0.352,0.232,0.584,0.584,0.584h3.502v0.584c0,0.35-0.234,0.584-0.584,0.584h-30.353c-0.351,0-0.584-0.234-0.584-0.584v-0.584 	h3.502c0.35,0,0.583-0.232,0.583-0.584c0-0.35-0.233-0.584-0.583-0.584h-3.502v-1.166h3.502c0.35,0,0.583-0.234,0.583-0.584 	 s-0.233-0.584-0.583-0.584h-3.502v-8.172h31.521V261.674z M692.412,240.661c2.276,0,4.087-1.81,4.087-4.086 	s-1.811-4.085-4.087-4.085s-4.086,1.809-4.086,4.085C688.326,238.852,690.136,240.661,692.412,240.661z M692.412,233.657 c1.634,0,2.918,1.284,2.918,2.918c0,1.635-1.284,2.919-2.918,2.919s-2.918-1.284-2.918-2.919 	C689.494,234.941,690.778,233.657,692.412,233.657z M699.417,265.176c2.917,0,5.253-2.334,5.253-5.254 	c0-2.918-2.336-5.252-5.253-5.252c-2.918,0-5.254,2.334-5.254,5.252C694.163,262.842,696.499,265.176,699.417,265.176z 	M699.417,255.838c2.276,0,4.085,1.809,4.085,4.084c0,2.277-1.809,4.086-4.085,4.086c-2.277,0-4.086-1.809-4.086-4.086 	C695.331,257.647,697.14,255.838,699.417,255.838z M699.417,262.842c0.35,0,0.584-0.234,0.584-0.584s-0.234-0.584-0.584-0.584 	c-0.992,0-1.752-0.758-1.752-1.752c0-0.35-0.232-0.582-0.584-0.582c-0.35,0-0.582,0.232-0.582,0.582  	C696.499,261.557,697.782,262.842,699.417,262.842z M699.417,258.172c0.992,0,1.751,0.758,1.751,1.75 	c0,0.352,0.232,0.584,0.582,0.584c0.352,0,0.584-0.232,0.584-0.584c0-1.633-1.283-2.918-2.917-2.918 	c-0.35,0-0.584,0.234-0.584,0.584S699.067,258.172,699.417,258.172z', {
                        top: pointer.y,
                        left: pointer.x,
                        fill: 'black'
                    });
                } else if (objType === 'nurse1') {
                    drawnObj = new fabric.Path('M709.306,262.151h-1.734v-1.742c0-0.247-0.2-0.447-0.443-0.447c-0.247,0-0.444,0.2-0.444,0.447v1.742h-1.734 c-0.246,0-0.443,0.2-0.443,0.446c0,0.247,0.201,0.447,0.443,0.447h1.734v1.742c0,0.246,0.201,0.446,0.444,0.446 	c0.247,0,0.443-0.2,0.443-0.446v-1.742h1.734c0.247,0,0.444-0.2,0.444-0.447C709.753,262.351,709.553,262.151,709.306,262.151z M716.941,263.698c-0.572-2.503-3.809-4.846-9.116-6.591c-1.228-0.404-2.243-0.826-3.019-1.26c-0.161-0.089-0.357-0.067-0.494,0.043 c-0.024,0.011-0.05,0.025-0.07,0.04c-1.246,0.854-3.316,3.361-4.25,5.343c-1.063-2.453-3.737-4.803-3.874-4.921 c-0.003-0.004-0.007-0.004-0.007-0.008c1.398-0.89,1.824-1.756,1.964-2.582c0.586,0.262,1.212,0.4,1.859,0.4 c3.37,0,6.112-3.791,6.112-8.451c0-0.454-0.024-0.908-0.082-1.388c-0.021-0.117-0.564-2.871-4.609-3.115 c-3.108-0.186-4.36-1.823-4.661-2.475h8.909c2.371,1.123,5.137,4.492,5.24,10.387c0.032,1.949-0.189,3.733-0.666,5.297 c-0.057,0.192-0.117,0.375-0.182,0.55c-0.082,0.233,0.039,0.487,0.268,0.569c0.229,0.082,0.486-0.039,0.569-0.272 c0.067-0.186,0.132-0.382,0.192-0.59c0.502-1.652,0.737-3.529,0.701-5.572c-0.086-4.91-1.945-8.204-3.994-10.003 c0.007-0.032,0.01-0.068,0.01-0.101v-4.198c0-1.284-1.037-2.325-2.313-2.325h-10.994c-1.277,0-2.314,1.044-2.314,2.325v4.202 c0,0.05,0.007,0.097,0.025,0.143c-2.031,1.81-3.862,5.09-3.945,9.965c-0.082,4.728,1.302,7.453,2.135,8.654 c0.003,0.004,0.007,0.008,0.011,0.011c-4.045,1.617-6.717,3.767-7.278,5.909c-0.104,0.39-0.043,2.514-0.014,3.408 c0.007,0.239,0.204,0.433,0.443,0.433h16.427h0.161h16.426c0.24,0,0.438-0.193,0.444-0.433 C716.978,266.202,717.027,264.085,716.941,263.698z M701.298,242.1c3.319,0.2,3.773,2.3,3.788,2.357 c0.046,0.415,0.071,0.837,0.071,1.255c0,4.167-2.343,7.558-5.222,7.558c-2.879,0-5.222-3.391-5.222-7.558 c0-2.225,0.365-5.1,1.173-6.623C696.323,240.012,697.829,241.893,701.298,242.1z M693.008,234.801c0-0.791,0.64-1.435,1.427-1.435 	h10.994c0.787,0,1.427,0.644,1.427,1.435v3.63c-0.328-0.219-0.658-0.4-0.977-0.548c-0.057-0.024-0.117-0.039-0.182-0.039h-11.47 c-0.064,0-0.125,0.015-0.182,0.039c-0.34,0.154-0.687,0.351-1.037,0.587V234.801z M691.062,257.254 c-0.772-1.112-2.057-3.651-1.978-8.13c0.104-5.894,2.864-9.267,5.239-10.386h0.74c-0.916,1.781-1.245,4.835-1.245,6.974 c0,3.334,1.402,6.22,3.434,7.597c-0.018,0.043-0.032,0.086-0.036,0.133c-0.075,0.676-0.236,2.085-5.04,3.666 c-0.354,0.118-0.701,0.235-1.041,0.36C691.133,257.394,691.108,257.319,691.062,257.254z M716.076,266.635h-15.994h-0.161h-15.994 c-0.036-1.241-0.043-2.511,0-2.722c0.558-2.128,3.827-4.41,8.53-5.958c1.224-0.404,2.182-0.802,2.933-1.195 c0.014,0.101,0.064,0.193,0.146,0.265c0.036,0.032,3.723,3.272,3.984,5.815c0,0.011,0.003,0.021,0.003,0.032 c0,0.004,0,0.008,0,0.011c0,0.008,0.004,0.015,0.004,0.019c0.003,0.007,0.003,0.014,0.007,0.021c0,0.003,0.004,0.011,0.004,0.014 c0.003,0.008,0.007,0.019,0.011,0.025c0.003,0.004,0.003,0.007,0.007,0.015c0.003,0.007,0.007,0.018,0.011,0.024 c0.004,0.004,0.004,0.008,0.007,0.015s0.007,0.014,0.014,0.021c0.003,0.003,0.007,0.011,0.011,0.014 c0.003,0.008,0.011,0.015,0.014,0.019c0.004,0.003,0.007,0.011,0.015,0.014c0.003,0.004,0.011,0.011,0.014,0.015 c0.003,0.007,0.011,0.011,0.014,0.015c0.003,0.003,0.007,0.007,0.015,0.011c0.007,0.007,0.014,0.011,0.018,0.014 c0.003,0.004,0.007,0.008,0.014,0.011c0.007,0.004,0.015,0.011,0.021,0.015c0.004,0.004,0.007,0.007,0.015,0.007 c0.007,0.004,0.014,0.008,0.021,0.011c0.003,0.004,0.011,0.004,0.014,0.008c0.007,0.003,0.014,0.007,0.021,0.011 c0.007,0.003,0.011,0.003,0.018,0.007c0.007,0.004,0.014,0.004,0.021,0.007c0.007,0.004,0.014,0.004,0.021,0.008 c0.007,0,0.015,0.003,0.018,0.003c0.007,0,0.018,0.004,0.025,0.004c0.004,0,0.011,0,0.015,0.004c0,0,0,0,0.003,0 c0.014,0,0.028,0.003,0.043,0.003l0,0l0,0c0.014,0,0.028,0,0.043-0.003c0,0,0,0,0.003,0c0.007,0,0.011,0,0.014-0.004 c0.007,0,0.018-0.004,0.025-0.004c0.007,0,0.014-0.003,0.018-0.003c0.007-0.004,0.015-0.004,0.021-0.008 c0.007-0.003,0.015-0.003,0.021-0.007c0.007-0.004,0.011-0.004,0.018-0.007c0.007-0.004,0.014-0.008,0.021-0.011 c0.003-0.004,0.011-0.004,0.014-0.008c0.007-0.003,0.014-0.007,0.021-0.014c0.003-0.004,0.007-0.004,0.014-0.008 c0.007-0.003,0.015-0.011,0.021-0.014c0.003-0.004,0.007-0.008,0.014-0.011c0.007-0.004,0.015-0.011,0.018-0.015 s0.007-0.007,0.014-0.011c0.007-0.004,0.011-0.011,0.018-0.015c0.003-0.003,0.011-0.011,0.014-0.014 c0.004-0.004,0.011-0.011,0.015-0.015c0.003-0.007,0.011-0.015,0.014-0.018c0.003-0.004,0.007-0.011,0.011-0.015 c0.003-0.007,0.011-0.014,0.014-0.021c0.004-0.003,0.004-0.007,0.007-0.015c0.003-0.007,0.007-0.018,0.011-0.024 c0.003-0.004,0.003-0.007,0.007-0.015c0.003-0.007,0.007-0.018,0.011-0.024c0.003-0.004,0.003-0.011,0.007-0.015 c0.003-0.007,0.003-0.015,0.007-0.021c0-0.007,0.003-0.015,0.003-0.021c0-0.004,0-0.004,0-0.007 c0.004-0.011,0.004-0.025,0.007-0.036c0.149-1.474,2.679-4.936,4.213-6.08c0.787,0.411,1.771,0.815,2.933,1.198 c4.929,1.62,8.037,3.787,8.527,5.94C716.115,264.107,716.105,265.38,716.076,266.635z', {
                        top: pointer.y,
                        left: pointer.x,
                        fill: 'black'
                    });
                } else if (objType === 'doctor') {
                    drawnObj = new fabric.Path('M705.486,249.451c2.209-2.58,3.588-6.331,3.588-9.171c0-5.026-4.084-9.111-9.111-9.111c-5.026,0-9.112,4.085-9.112,9.111 c0,2.84,1.379,6.591,3.588,9.171c-13.367,4.493-11.966,16.859-11.38,19.38h33.807C718.861,260.195,713.582,251.817,705.486,249.451z  M699.963,232.385c3.195,0,5.946,1.905,7.184,4.641c-3.032,2.069-6.108-0.267-6.108-0.267c-2.151-1.253-4.849-1.134-6.881,0.289 l-1.838,1.29C693.187,234.928,696.279,232.385,699.963,232.385z M692.068,240.281c0-0.096,0.007-0.192,0.015-0.289l2.773-1.949 c1.646-1.157,3.833-1.246,5.567-0.237c0,0,3.388,2.595,7.147,0.393c0.178,0.66,0.289,1.356,0.289,2.076 c0,4.314-3.537,10.935-7.896,10.935C695.604,251.208,692.068,244.596,692.068,240.281z M715.858,267.615h-31.783 c-0.919-5.701,1.416-11.18,5.716-14.479c0.26,1.705,0.764,3.344,1.513,4.9c-1.876,1.179-2.758,3.544-1.995,5.717l1.008,2.861 l2.291-0.808l-0.4-1.149l-1.149,0.4l-0.608-1.721c-0.667-1.897,0.333-3.98,2.231-4.648c1.891-0.667,3.981,0.334,4.648,2.232 l0.601,1.72l-1.149,0.4l0.4,1.149l2.291-0.809l-1.008-2.869c-0.875-2.491-3.581-3.818-6.072-3.01 c-0.786-1.631-1.29-3.366-1.49-5.168c1.349-0.853,2.862-1.505,4.5-1.912c1.327,1.208,2.869,1.979,4.552,1.979 c1.683,0,3.226-0.771,4.552-1.979c1.913,0.475,3.655,1.282,5.168,2.364c-0.355,1.616-0.949,3.151-1.779,4.575 c-0.208-0.06-0.423-0.104-0.652-0.104c-1.342,0-2.432,1.09-2.432,2.432s1.09,2.432,2.432,2.432s2.432-1.09,2.432-2.432 c0-0.675-0.274-1.282-0.727-1.728c0.793-1.371,1.387-2.824,1.779-4.358C714.65,256.977,716.727,262.203,715.858,267.615z M708.467,259.72c0,0.667-0.549,1.216-1.216,1.216s-1.216-0.541-1.216-1.216s0.549-1.216,1.216-1.216 C707.926,258.504,708.467,259.052,708.467,259.72z', {
                        top: pointer.y,
                        left: pointer.x,
                        fill: 'black'
                    });
                } else if (objType === 'clock') {
                    drawnObj = new fabric.Path('M11.72,10.218c0.507,0.74,1.36,1.229,2.324,1.229c0.965,0,1.819-0.488,2.326-1.23c1.163-0.627,1.148-1.694,1.143-2.152 c-0.025-1.893-1.439-3.326-3.362-3.409c-1.016-0.043-1.603,0.451-1.782,0.632c-0.157,0.036-0.506,0.143-0.856,0.434 c-0.416,0.347-0.916,1.031-0.942,2.332C10.559,8.511,10.538,9.583,11.72,10.218z M14.043,10.999c-1.305,0-2.368-1.063-2.368-2.367 v-0.66c0.612-0.231,0.99-0.877,1.175-1.289c0.506,0.531,1.746,1.604,3.562,1.66v0.289C16.412,9.937,15.349,10.999,14.043,10.999z  M11.015,8.059c0.043-2.12,1.438-2.341,1.495-2.349c0.057-0.006,0.107-0.035,0.145-0.078c0.02-0.023,0.495-0.576,1.477-0.533 c1.679,0.072,2.914,1.32,2.937,2.969c0.004,0.303,0.01,0.779-0.284,1.211c0.049-0.208,0.076-0.425,0.076-0.646V8.324 c0.087-0.032,0.147-0.118,0.143-0.218c-0.005-0.123-0.11-0.219-0.233-0.212c-2.351,0.112-3.799-1.753-3.813-1.771l0,0 c-0.027-0.037-0.065-0.064-0.112-0.08c-0.118-0.035-0.243,0.03-0.278,0.148c-0.005,0.014-0.431,1.333-1.272,1.416 c-0.123,0.012-0.212,0.121-0.2,0.244c0.008,0.085,0.064,0.154,0.14,0.186v0.594c0,0.229,0.027,0.451,0.08,0.664 	C11.047,8.923,11.006,8.488,11.015,8.059z M14.122,9.224h-0.283c-0.54,0-0.979,0.439-0.979,0.98v0.293 c0,0.123,0.1,0.223,0.223,0.223s0.223-0.1,0.223-0.223v-0.293c0-0.294,0.239-0.531,0.532-0.531h0.283 c0.293,0,0.532,0.237,0.532,0.531v0.293c0,0.123,0.1,0.223,0.223,0.223s0.223-0.1,0.223-0.223v-0.293 C15.1,9.665,14.661,9.224,14.122,9.224z  M14.243,10.091h-0.526c-0.124,0-0.223,0.1-0.223,0.224c0,0.123,0.1,0.224,0.223,0.224h0.526 c0.123,0,0.223-0.101,0.223-0.224C14.466,10.189,14.366,10.091,14.243,10.091z M11.834,11.52c-0.409,0-0.775,0.171-1.049,0.437 	c-0.001,0.002-0.003,0.002-0.005,0.004c-1.103,1.103-4.406,4.408-4.406,4.408c-0.237,0.236-0.367,0.553-0.367,0.887 c0,0.336,0.13,0.649,0.367,0.888c0.237,0.237,0.552,0.366,0.887,0.366s0.65-0.129,0.888-0.366l2.205-2.203v4.239H4.79 c-0.073,0-0.141,0.035-0.183,0.096s-0.053,0.137-0.027,0.205l0.596,1.634c0.032,0.089,0.116,0.147,0.21,0.147h0.98l0.499,7.879 c0.007,0.117,0.104,0.209,0.223,0.209h20.824c0.119,0,0.217-0.092,0.224-0.209l0.499-7.879h0.98c0.094,0,0.178-0.06,0.209-0.147 l0.596-1.634c0.025-0.068,0.017-0.146-0.026-0.205c-0.041-0.061-0.109-0.096-0.183-0.096H17.736v-4.223l2.151,2.141 c0.245,0.246,0.566,0.367,0.888,0.367c0.32,0,0.643-0.121,0.887-0.367c0.49-0.487,0.49-1.283,0-1.772c0,0-3.216-3.181-4.264-4.265  c-0.297-0.309-0.684-0.539-1.144-0.539h-1.243c-0.113,0-0.21,0.085-0.222,0.199c-0.035,0.322-0.362,0.576-0.746,0.576 c-0.383,0-0.71-0.254-0.745-0.576c-0.012-0.114-0.107-0.199-0.222-0.199L11.834,11.52L11.834,11.52z M17.736,13.028l3.354,3.355 l-1.143,1.144l-2.213-2.202L17.736,13.028L17.736,13.028z M21.347,17.781c-0.151,0.152-0.354,0.236-0.57,0.236 c-0.188,0-0.363-0.063-0.507-0.179l1.136-1.137c0.116,0.145,0.18,0.32,0.18,0.508C21.584,17.427,21.5,17.63,21.347,17.781z M17.29,13.001v5.041h-0.726c-0.125,0-0.224,0.101-0.224,0.223c0,0.123,0.101,0.224,0.224,0.224h0.726v1.69h-1.938V16.71 l1.531-1.692c0.062-0.067,0.075-0.164,0.036-0.245l-0.477-1.003l0.421-0.246c0.104-0.062,0.141-0.192,0.083-0.3l-0.69-1.258 C16.827,11.968,17.29,12.431,17.29,13.001z M15.768,13.647l0.22-1.247l0.465,0.847L15.768,13.647z M16.057,13.995l0.396,0.834 l-1.1,1.215v-0.035l0.313-1.783L16.057,13.995z M14.38,16.638l-0.335,0.35l-0.334-0.35l0.163-3.1h0.343L14.38,16.638z M14.356,12.704l-0.104,0.387h-0.413l-0.104-0.387c0.1,0.023,0.203,0.037,0.311,0.037C14.153,12.741,14.257,12.728,14.356,12.704z M13.195,12.421l0.242,0.898l-0.179,3.391c-0.003,0.063,0.02,0.121,0.063,0.166l0.563,0.588c0.042,0.045,0.101,0.069,0.161,0.069 c0.062,0,0.12-0.024,0.162-0.069l0.563-0.588c0.042-0.045,0.065-0.104,0.063-0.166l-0.179-3.39l0.242-0.899 c0.138-0.125,0.24-0.279,0.298-0.455h0.418l-0.7,3.985c-0.002,0.013-0.003,0.025-0.003,0.038v4.189h-1.713v-4.189 c0-0.013-0.001-0.025-0.003-0.038l-0.699-3.985h0.408C12.955,12.142,13.058,12.296,13.195,12.421z M12.333,13.649l-0.685-0.4 l0.465-0.849L12.333,13.649z M12.434,14.228l0.313,1.781v0.035l-1.101-1.218l0.392-0.833L12.434,14.228z M7.262,18.063 c-0.216,0-0.419-0.084-0.57-0.236c-0.153-0.151-0.237-0.354-0.237-0.571c0-0.215,0.084-0.418,0.237-0.57l0.084-0.086l1.143,1.144 l-0.085,0.085C7.68,17.979,7.479,18.063,7.262,18.063z M8.233,17.427L7.09,16.283l3.264-3.265v2.289L8.233,17.427z M10.8,18.487 h0.695c0.123,0,0.223-0.1,0.223-0.223s-0.1-0.225-0.223-0.225H10.8v-5.041c0-0.57,0.464-1.033,1.034-1.033h0.009l-0.689,1.256  c-0.06,0.107-0.021,0.24,0.083,0.301l0.417,0.245l-0.474,1.004c-0.038,0.082-0.023,0.179,0.037,0.245l1.531,1.691v3.471H10.8V18.487 z M27.799,28.378h-6.832c-0.124,0-0.223,0.101-0.223,0.225c0,0.123,0.1,0.223,0.223,0.223h6.806l-0.068,1.077H7.298l-0.482-7.642 h1.745v4.607c0,0.123,0.1,0.225,0.223,0.225s0.223-0.102,0.223-0.225v-4.607h0.656v1.193c0,0.124,0.1,0.225,0.224,0.225 c0.123,0,0.224-0.101,0.224-0.225v-1.193h15.047v2.875c0,0.123,0.101,0.224,0.224,0.224s0.224-0.101,0.224-0.224v-2.875h0.866v0.826 c0,0.123,0.101,0.224,0.224,0.224s0.223-0.101,0.223-0.224v-0.826h1.273L27.799,28.378z M29.459,21.813H5.542l-0.433-1.188h24.78 L29.459,21.813z M24.59,17.104c-0.123,0-0.223,0.101-0.223,0.223v0.279c-0.771,0.108-1.365,0.772-1.365,1.573 c0,0.123,0.1,0.223,0.223,0.223h2.731c0.001,0.001,0.001,0.001,0.001,0c0.123,0,0.223-0.1,0.223-0.223c0-0.008,0-0.016,0-0.023 c-0.012-0.79-0.603-1.441-1.364-1.55v-0.279C24.814,17.204,24.714,17.104,24.59,17.104z M25.711,18.956h-2.24 c0.104-0.523,0.566-0.92,1.119-0.92C25.145,18.036,25.607,18.433,25.711,18.956z M22.267,19.737c0,0.124,0.102,0.225,0.225,0.225 h4.096c0.123,0,0.224-0.101,0.224-0.225c0-0.123-0.101-0.223-0.224-0.223h-4.096C22.367,19.515,22.267,19.614,22.267,19.737z M24.398,13.401c2.149,0,3.897-1.75,3.897-3.898c0-2.15-1.748-3.9-3.897-3.9c-2.15,0-3.9,1.75-3.9,3.9 C20.499,11.651,22.248,13.401,24.398,13.401z M24.398,6.048c1.903,0,3.452,1.551,3.452,3.455c0,1.902-1.549,3.453-3.452,3.453 c-1.904,0-3.454-1.551-3.454-3.453C20.945,7.599,22.494,6.048,24.398,6.048z M24.175,12.347c0,0.123,0.102,0.224,0.225,0.224 c1.69,0,3.067-1.376,3.067-3.067c0-0.123-0.101-0.224-0.225-0.224c-0.123,0-0.224,0.101-0.224,0.224c0,1.445-1.176,2.621-2.62,2.621 C24.275,12.124,24.175,12.224,24.175,12.347z M22.875,11.249c0.057,0,0.114-0.022,0.158-0.066l1.521-1.521 c0.04-0.041,0.065-0.097,0.065-0.158V6.632c0-0.123-0.101-0.224-0.224-0.224s-0.224,0.101-0.224,0.224V9.41l-1.458,1.458 c-0.087,0.088-0.087,0.229,0,0.315C22.761,11.226,22.818,11.249,22.875,11.249z M19.864,28.378h-3.31 c-0.124,0-0.224,0.101-0.224,0.225c0,0.123,0.1,0.223,0.224,0.223h3.31c0.124,0,0.223-0.1,0.223-0.223 C20.087,28.478,19.987,28.378,19.864,28.378z', {
                        top: pointer.y,
                        left: pointer.x,
                        fill: 'black'
                    });
                } else if (objType === 'con-chair') {
                    drawnObj = new fabric.Path('M15.998,2.962V2.93h13.004v2.253H18.186 M18.199,42.07h10.803 v-2.254h-3.094h-6.742h-0.967 M18.252,41.986v0.084h-2.254V2.93h0.084 M18.272,5.184v0.651v10.58v1.055v10.123v1.16V39.23v0.535  M18.272,5.834c0.368-0.367,0.876-0.594,1.437-0.594h5.744c1.119,0,2.027,0.907,2.027,2.027v7.716c0,0.955-0.66,1.755-1.549,1.97 c-0.154,0.037-0.314,0.057-0.479,0.057h-5.744c-0.164,0-0.324-0.021-0.479-0.057c-0.367-0.088-0.697-0.279-0.958-0.54 	 M18.272,27.592c0.368,0.352,0.876,0.57,1.437,0.57h5.744c1.119,0,2.027-0.869,2.027-1.941v-7.382c0-0.914-0.66-1.68-1.549-1.885 	c-0.154-0.036-0.314-0.055-0.479-0.055h-5.744c-0.164,0-0.324,0.019-0.479,0.055c-0.367,0.086-0.697,0.267-0.958,0.515  M18.272,28.752c0.368-0.363,0.876-0.588,1.437-0.588h5.744c1.119,0,2.027,0.898,2.027,2.008v7.643c0,0.945-0.662,1.738-1.551,1.951 	c-0.153,0.037-0.313,0.055-0.477,0.055h-5.744c-0.164,0-0.322-0.018-0.477-0.055c-0.369-0.088-0.699-0.275-0.96-0.535', {
                        top: pointer.y,
                        left: pointer.x,
                        fill: 'transparent',
                        stroke: '#000000',
                        strokeWidth: 0.5,
                        strokeLinecap: 'round',
                        strokeLinejoin: 'round',
                        strokeMiterlimit: 10
                    });
                } else if (objType === 'z') {
                    drawnObj = new fabric.Path('M26.727,12.137L10.623,33.956c-2.865-2.969-4.624-7.008-4.624-11.458c0-4.729,1.991-8.994,5.176-12.005 	c0.02,0.334,0.03,0.52,0.03,0.558c0,0.333-0.062,0.906-0.184,1.722c-0.241,1.676-0.368,2.871-0.384,3.581h0.521 c0.544-1.676,1.337-2.804,2.379-3.377c1.027-0.56,2.779-0.84,5.257-0.84H26.727z M34.161,10.821L18.068,32.714h7.275 c2.855,0,4.887-0.467,6.094-1.406c1.166-0.904,2.064-2.069,2.699-3.49h0.52c-0.03,0.668-0.31,1.838-0.837,3.514 c-0.5,1.586-0.78,2.688-0.839,3.308c-2.04-0.181-3.898-0.272-5.575-0.272H14.603L32.21,10.485h1.604 C30.859,7.7,26.878,5.997,22.5,5.997c-4.248,0-8.128,1.606-11.053,4.249c1.493,0.158,3.468,0.239,5.919,0.239h12.734L12.539,34.366 h-1.507c2.971,2.869,7.015,4.637,11.468,4.637c9.113,0,16.502-7.389,16.502-16.505C39.002,17.938,37.15,13.811,34.161,10.821z  M33.814,10.485c0.117,0.11,0.233,0.224,0.347,0.336 M10.623,33.956c0.136,0.139,0.272,0.275,0.409,0.41', {
                        top: pointer.y,
                        left: pointer.x,
                        fill: 'black',
                        stroke: '#000000',
                        strokeWidth: 0.5,
                        strokeLinecap: 'round',
                        strokeLinejoin: 'round',
                        strokeMiterlimit: 10
                    });
                } else if (objType === 'wheelchair') {
                    drawnObj = new fabric.Path('M118.92,122.375c-0.275-0.161-0.627-0.067-0.789,0.207c-2.132,3.656-6.081,5.928-10.31,5.928 	c-6.576,0-11.925-5.349-11.925-11.926c0-4.347,2.367-8.352,6.179-10.451c0.279-0.154,0.381-0.504,0.227-0.784 	c-0.153-0.279-0.505-0.38-0.783-0.227c-4.18,2.303-6.775,6.696-6.775,11.462c0,7.213,5.867,13.08,13.078,13.08 	c4.639,0,8.971-2.491,11.308-6.501C119.29,122.888,119.196,122.536,118.92,122.375z M127.77,122.542 	c-0.215-0.235-0.58-0.252-0.814-0.035l-1.76,1.613l-6.057-7.513c-0.006-0.008-0.018-0.012-0.023-0.02 c-0.027-0.029-0.061-0.052-0.092-0.077c-0.029-0.02-0.057-0.043-0.088-0.059c-0.031-0.015-0.063-0.021-0.096-0.029 c-0.041-0.012-0.08-0.022-0.123-0.024c-0.01,0-0.018-0.006-0.027-0.006h-10.291v-10.188h10.232c0.318,0,0.576-0.259,0.576-0.577 c0-0.319-0.258-0.578-0.576-0.578h-10.232v-3.468c0-0.318-0.259-0.577-0.577-0.577s-0.577,0.259-0.577,0.577v15.387 c0,0.319,0.259,0.577,0.577,0.577h10.591l6.271,7.777c0.002,0.005,0.01,0.006,0.014,0.012c0.004,0.004,0.006,0.011,0.01,0.017 c0.035,0.038,0.08,0.06,0.121,0.087c0.025,0.015,0.043,0.036,0.066,0.048c0.076,0.032,0.156,0.052,0.238,0.052 c0.066,0,0.133-0.013,0.195-0.036c0.021-0.009,0.039-0.022,0.061-0.033c0.037-0.018,0.074-0.032,0.105-0.06 c0.004-0.004,0.006-0.009,0.012-0.014c0.004-0.003,0.01-0.006,0.016-0.01l2.213-2.03 C127.969,123.142,127.985,122.777,127.77,122.542z M107.822,99.587c1.816,0,3.293-1.478,3.293-3.294 c0-1.815-1.477-3.294-3.293-3.294s-3.295,1.478-3.295,3.294S106.005,99.587,107.822,99.587z M107.822,94.154 c1.18,0,2.14,0.96,2.14,2.14s-0.96,2.14-2.14,2.14s-2.141-0.96-2.141-2.14S106.642,94.154,107.822,94.154z', {
                        top: pointer.y,
                        left: pointer.x,
                        fill: 'black',
                        stroke: '#000000',
                        strokeWidth: 0,
                        strokeLinecap: 'round',
                        strokeLinejoin: 'round',
                        strokeMiterlimit: 10
                    });
                } else if (objType === 'roundcon') {
                    drawnObj = new fabric.Path('M19.702,11.218V9.277 	c0-1.629,1.318-2.948,2.949-2.948c0.811,0,1.552,0.33,2.085,0.863c0.532,0.533,0.862,1.271,0.862,2.085v1.941 M25.598,10.079v0.335 	c0,0.815-0.33,1.552-0.862,2.085c-0.534,0.533-1.273,0.863-2.086,0.863c-1.63,0-2.949-1.319-2.949-2.949v-0.335 M18.604,11.218 	v-2.34c0-2.235,1.812-4.047,4.048-4.047c1.119,0,2.127,0.453,2.86,1.185c0.731,0.731,1.184,1.745,1.184,2.862v2.34 M19.701,10.749 	v0.461c0,0.303-0.247,0.55-0.55,0.55c-0.153,0-0.289-0.062-0.388-0.161c-0.1-0.1-0.161-0.239-0.161-0.389v-0.461 M26.699,10.749 	v0.461c0,0.303-0.246,0.55-0.549,0.55c-0.153,0-0.29-0.062-0.389-0.161c-0.1-0.1-0.161-0.239-0.161-0.389v-0.461 M25.599,33.781 	v1.941c0,1.629-1.317,2.947-2.948,2.947c-0.813,0-1.552-0.328-2.085-0.861c-0.534-0.535-0.863-1.271-0.863-2.086v-1.941 M19.703,34.92v-0.334c0-0.814,0.33-1.551,0.863-2.086c0.533-0.533,1.273-0.863,2.085-0.863c1.63,0,2.949,1.318,2.949,2.949v0.334 M26.697,33.781v2.34c0,2.236-1.812,4.049-4.048,4.049c-1.118,0-2.128-0.453-2.86-1.186c-0.732-0.73-1.185-1.744-1.185-2.863v-2.34 M25.601,34.25v-0.461c0-0.303,0.246-0.549,0.55-0.549c0.151,0,0.289,0.061,0.388,0.16c0.1,0.1,0.161,0.24,0.161,0.389v0.461 M18.602,34.25v-0.461c0-0.303,0.247-0.549,0.549-0.549c0.153,0,0.29,0.061,0.389,0.16c0.099,0.1,0.161,0.24,0.161,0.389v0.461 M31.247,14.209l1.746-0.848c1.466-0.712,3.228-0.103,3.94,1.363c0.355,0.73,0.383,1.54,0.136,2.253s-0.766,1.332-1.498,1.688 l-1.746,0.849 M34.849,19.014l-0.301,0.147c-0.732,0.356-1.54,0.382-2.253,0.135s-1.334-0.768-1.688-1.499 	c-0.712-1.466-0.103-3.229,1.363-3.94l0.302-0.146 M30.768,13.222l2.105-1.023c2.01-0.977,4.431-0.14,5.409,1.871 	c0.488,1.005,0.522,2.112,0.184,3.09c-0.337,0.978-1.051,1.829-2.057,2.317L34.305,20.5 M31.669,14.003l-0.415,0.202 	c-0.272,0.132-0.603,0.018-0.734-0.254c-0.066-0.137-0.071-0.287-0.025-0.419s0.145-0.249,0.28-0.315l0.414-0.201 M34.728,20.297 	L34.313,20.5c-0.272,0.132-0.602,0.018-0.734-0.254c-0.066-0.137-0.071-0.287-0.025-0.42s0.146-0.249,0.279-0.314l0.414-0.201 	M34.672,26.396l1.466,1.273c1.229,1.07,1.359,2.93,0.29,4.16c-0.531,0.613-1.266,0.955-2.019,1.008s-1.524-0.182-2.141-0.715 l-1.465-1.275 M31.665,31.596l-0.254-0.221c-0.615-0.533-0.954-1.266-1.008-2.02c-0.053-0.752,0.184-1.527,0.717-2.139 c1.068-1.23,2.93-1.361,4.16-0.293l0.252,0.219 M35.392,25.569l1.768,1.534c1.687,1.467,1.866,4.023,0.4,5.711 	c-0.734,0.844-1.739,1.309-2.771,1.381c-1.031,0.072-2.094-0.25-2.938-0.982l-1.767-1.535 M35.026,26.705l-0.347-0.303 	c-0.229-0.199-0.254-0.547-0.055-0.775c0.1-0.115,0.235-0.178,0.376-0.188c0.14-0.011,0.286,0.033,0.398,0.133l0.348,0.303 	M30.437,31.986l-0.349-0.301c-0.229-0.199-0.253-0.547-0.054-0.775c0.099-0.115,0.236-0.18,0.375-0.188 c0.141-0.012,0.287,0.035,0.4,0.133l0.347,0.303 M11.175,20.317l-1.746-0.849c-0.732-0.356-1.251-0.975-1.498-1.688 s-0.22-1.522,0.135-2.253c0.712-1.466,2.475-2.075,3.94-1.363l1.746,0.849 M12.729,14.515l0.302,0.146 	c1.466,0.712,2.075,2.474,1.363,3.94c-0.354,0.73-0.975,1.252-1.688,1.498c-0.713,0.247-1.521,0.221-2.253-0.135l-0.301-0.147 	 M10.695,21.304l-2.104-1.023c-1.005-0.489-1.719-1.339-2.057-2.317s-0.305-2.085,0.185-3.09c0.978-2.011,3.399-2.848,5.409-1.871 l2.105,1.023 M13.812,13.819l0.415,0.201c0.135,0.066,0.234,0.182,0.279,0.315c0.046,0.133,0.042,0.282-0.025,0.419 	c-0.133,0.272-0.462,0.387-0.734,0.254l-0.415-0.202 M10.753,20.114l0.414,0.201c0.135,0.066,0.234,0.182,0.279,0.314 	c0.046,0.133,0.042,0.283-0.025,0.42c-0.132,0.272-0.462,0.386-0.734,0.254l-0.414-0.202 M14.732,31.117l-1.465,1.271 	c-0.615,0.535-1.388,0.771-2.141,0.717c-0.752-0.053-1.487-0.395-2.02-1.008c-1.069-1.229-0.938-3.092,0.292-4.16l1.465-1.271 	M10.004,27.412l0.252-0.221c1.231-1.068,3.091-0.938,4.16,0.293c0.533,0.611,0.77,1.387,0.717,2.139 	c-0.053,0.754-0.393,1.486-1.008,2.02l-0.253,0.221 M15.453,31.945l-1.767,1.535c-0.844,0.732-1.906,1.055-2.938,0.982 	c-1.033-0.072-2.038-0.537-2.771-1.381c-1.467-1.689-1.288-4.244,0.4-5.711l1.767-1.535 M9.789,26.143l0.348-0.303 	c0.113-0.098,0.259-0.143,0.399-0.133s0.276,0.072,0.376,0.188c0.198,0.229,0.174,0.576-0.055,0.775l-0.348,0.303 M14.379,31.426 	l0.348-0.303c0.113-0.098,0.259-0.145,0.399-0.133c0.14,0.01,0.276,0.072,0.376,0.188c0.199,0.229,0.174,0.576-0.054,0.775 	l-0.348,0.303 M22.601,15.005c-4.183,0-7.572,3.39-7.572,7.572c0,4.182,3.39,7.573,7.572,7.573c4.182,0,7.572-3.391,7.572-7.573 	C30.173,18.395,26.783,15.005,22.601,15.005z', {
                        top: pointer.y,
                        left: pointer.x,
                        fill: 'transparent',
                        stroke: '#000000',
                        strokeWidth: 0.6,
                        strokeLinecap: 'round',
                        strokeLinejoin: 'round',
                        strokeMiterlimit: 10
                    });
                } else if (objType === 'monitor') {
                    var path1 = new fabric.Path('M41.584,31.091H3.416V5.841h38.168V31.091z', {
                        fill: 'transparent',
                        stroke: '#000'
                    });
                    var path2 = new fabric.Path('M29.104,35.935h-4.389v-0.06h-4.433v0.06h-4.389l-1.277,3.186h15.766L29.104,35.935z M23.784,35.857h-2.568v-4.715h2.568 V35.857z', {
                        fill: 'black'
                    });
                    drawnObj = new fabric.Group([path1, path2], { left: pointer.x, top: pointer.y });
                } else if (objType === 'arrow') {
                    drawnObj = new fabric.Path('M18.854,1.861v26.148h2.002l-3.335,5.601 l-3.336-5.601h2V1.861H18.854z', {
                        fill: 'transparent',
                        stroke: '#000000',
                        strokeWidth: 0.7088,
                        left: pointer.x,
                        top: pointer.y
                    });
                } else if (objType === 'saftycylinder') {
                    drawnObj = new fabric.Path('M33.942,1.063C31.356,1.4,29.026,1.718,28.75,1.789c-0.694,0.164-1.625,0.808-2.033,1.421l-0.348,0.501l-1.594,0.01h-1.584 l-0.174-0.358c-0.572-1.186-2.105-2.095-3.557-2.095c-0.675,0-1.676,0.286-2.116,0.603c-0.307,0.215-0.358,0.215-5.631,0.215H6.389 v1.635v1.635h3.138h3.127l-0.899,0.562c-2.392,1.502-4.241,3.526-5.468,5.968c-0.225,0.46-0.399,0.869-0.378,0.899 c0.071,0.062,2.963,1.257,2.984,1.237c0.01-0.021,0.123-0.256,0.235-0.521c0.991-2.269,3.516-4.66,5.969-5.652l0.817-0.327 l0.624,0.634c0.347,0.347,0.787,0.695,0.971,0.766l0.337,0.143L17.815,9.73l-0.03,0.664l-0.716,0.225 c-2.156,0.654-3.904,2.146-4.906,4.19c-0.879,1.768-0.807,0.592-0.848,14.553c-0.031,13.808-0.072,12.99,0.674,13.961 c0.276,0.368,0.583,0.613,1.083,0.869l0.706,0.357h5.631c5.315,0,5.662-0.011,6.143-0.195c0.665-0.266,1.503-1.052,1.799-1.727 l0.245-0.531l0.031-12.061c0.02-8.155-0.011-12.284-0.082-12.765c-0.317-2.044-1.369-3.915-2.934-5.182 c-0.787-0.634-2.177-1.36-2.953-1.533l-0.552-0.123l0.01-0.674V9.086l0.634-0.409c0.439-0.296,0.746-0.603,1.042-1.042l0.409-0.634 h1.604l1.604-0.01l0.154,0.286c0.193,0.378,0.961,1.083,1.471,1.339c0.613,0.317,0.931,0.368,5.856,0.981 c2.494,0.307,4.691,0.583,4.875,0.613l0.327,0.062V5.355V0.45l-0.225,0.01C38.735,0.471,36.518,0.736,33.942,1.063z M20.646,3.261 c1.39,0.807,1.646,2.677,0.521,3.792c-1.155,1.155-3.086,0.838-3.833-0.623c-0.378-0.726-0.368-1.656,0.02-2.32 	C18.03,2.954,19.491,2.576,20.646,3.261z M19.471,29.884V41.33h-2.453h-2.453V29.884V18.438h2.453h2.453V29.884z M18.347,4.283 c0,0.153,0.562,1.461,0.695,1.604c0.347,0.409,1.145,0.072,1.145-0.47c0-0.368-0.286-0.623-1.052-0.92 C18.418,4.222,18.347,4.201,18.347,4.283z', {
                        fill: '#000000',
                        stroke: '#000000',
                        strokeWidth: 0,
                        left: pointer.x,
                        top: pointer.y
                    });
                } else if (objType === 'steps') {
                    drawnObj = new fabric.Path('M26.365-10.365v2.826h-8.477v8.477H9.412v8.476H0.937v8.476H-7.54v8.477h-2.825V15.063h8.477V6.588h8.477v-8.477h8.476 v-8.477H26.365L26.365-10.365z', {
                        fill: '#000000',
                        stroke: '#000000',
                        strokeWidth: 0,
                        left: pointer.x,
                        top: pointer.y
                    });
                }
                canvas.add(drawnObj);
            });

            canvas.on('mouse:move', function (o) {
                if (!isMouseDown) return;
                var shift = o.e.shiftKey;
                var pointer = canvas.getPointer(o.e);
                if (objType === 'line') {
                    if (shift) {
                        drawnObj.set({ x2: pointer.x, y2: pointer.y });
                    } else {
                        drawnObj.set({ x2: pointer.x, y2: pointer.y });
                    }
                } else if (objType === 'square' || objType === 'rounded-rect') {
                    var newWidth = (drawnObj.left - pointer.x) * -1;
                    var newHeight = (drawnObj.top - pointer.y) * -1;
                    drawnObj.set({ width: newWidth, height: newHeight });
                } else if (objType === 'circle') {
                    var x = drawnObj.left - pointer.x;
                    var y = drawnObj.top - pointer.y;
                    var diff = Math.sqrt(x * x + y * y);
                    drawnObj.set({ radius: diff / 2.3 });
                } else if (objType === 'arc') {
                    var x = drawnObj.left - pointer.x;
                    var y = drawnObj.top - pointer.y;
                    var diff = Math.sqrt(x * x + y * y);
                    drawnObj.set({ radius: diff / 2.3 });
                }
                canvas.renderAll();
            });

            canvas.on('mouse:up', function (o) {
                isMouseDown = false;
                if (objType === 'square' || objType === 'rounded-rect') {
                    if (drawnObj.width < 0) {
                        var newLeft = drawnObj.left + drawnObj.width;
                        var newWidth = Math.abs(drawnObj.width);
                        drawnObj.set({ left: newLeft, width: newWidth });
                    }
                    if (drawnObj.height < 0) {
                        var newTop = drawnObj.top + drawnObj.height;
                        var newHeight = Math.abs(drawnObj.height);
                        drawnObj.set({ top: newTop, height: newHeight });
                    }
                }
                if (drawnObj.height !== 0 || drawnObj.width !== 0) {
                    canvas.defaultCursor = 'auto';
                    vm.selectAll();
                    canvas.deactivateAll();
                    canvas.setActiveObject(drawnObj).renderAll();
                    drawnObj.perPixelTargetFind = true;
                    drawnObj.targetFindTolerance = 4;
                    vm.disableDraw();
                    canvas.trigger("object:statechange");
                } else {
                    canvas.remove(drawnObj);
                }
            });
        };

        vm.cancelInsert = function () {
            canvas.defaultCursor = 'auto';
            disableDraw();
            $("#toolbar-text").removeClass("toolbar-item-active ");
        };

        vm.escHandler = function (e) {
            if (e.keyCode == 27) {
                cancelInsert();
                $(document).unbind("keyup", escHandler);
            }
        };

        vm.selectAll = function (objs) {
            canvas.deactivateAll();
            if (objs === undefined) {
                objs = canvas.getObjects();
            }
            objs.map(function (o) {
                return o.set('active', true);
            });
            var group = new fabric.Group(objs, {
                originX: 'center',
                originY: 'center'
            });
            canvas.setActiveGroup(group.setCoords());
        };

        vm.sendForward = function () {
            if (canvas.getActiveGroup() !== null) {
                vm.sendGroupForward(canvas.getActiveGroup(), false);
            } else if (canvas.getActiveObject() !== null) {
                canvas.bringForward(canvas.getActiveObject());
            }
            canvas.trigger("object:statechange");
        };

        vm.sendBackward = function () {
            if (canvas.getActiveGroup() !== null) {
                vm.sendGroupBackward(canvas.getActiveGroup(), false);
            } else if (canvas.getActiveObject() !== null) {
                canvas.sendBackwards(canvas.getActiveObject());
            }
            canvas.trigger("object:statechange");
        };

        vm.sendToFront = function () {
            if (canvas.getActiveGroup() !== null) {
                vm.sendGroupForward(canvas.getActiveGroup(), true);
            } else if (canvas.getActiveObject() !== null) {
                canvas.bringToFront(canvas.getActiveObject());
            }
            canvas.trigger("object:statechange");
        };

        vm.sendToBack = function () {
            if (canvas.getActiveGroup() !== null) {
                vm.sendGroupBackward(canvas.getActiveGroup(), true);
            } else if (canvas.getActiveObject() !== null) {
                canvas.sendToBack(canvas.getActiveObject());
            }
            canvas.trigger("object:statechange");
        };

        vm.clone = function () {
            var object = null;
            if (canvas.getActiveGroup() !== null) {
                var objects = canvas.getActiveGroup().objects;
                // Fabric.js bug getting an object's coordinates when a group is selected
                canvas.deactivateAll();
                var cloned = [];
                for (var i = 0; i < objects.length; i++) {
                    object = objects[i].clone();
                    object.set("top", object.top + 20);
                    object.set("left", object.left + 20);
                    canvas.add(object);
                    cloned.push(object);
                }
                selectAll(cloned);
            } else if (canvas.getActiveObject() !== null) {
                object = canvas.getActiveObject().clone();
                object.set("top", object.top + 20);
                object.set("left", object.left + 20);
                canvas.add(object);
                canvas.deactivateAll();
                canvas.setActiveObject(object);
            }

            canvas.renderAll();
            canvas.trigger("object:statechange");
        };
        // TODO Fabric.js might do this for us now that we've on version >1.5
        vm.sendGroupBackward = function (group, bottom) {
            var sorted = group.objects.slice();
            var objects = canvas.getObjects();
            sorted.sort(function (a, b) {
                var z1 = objects.indexOf(a);
                var z2 = objects.indexOf(b);
                return a - b;
            });
            var obj;
            if (bottom === true) {
                for (var i = 0; i < sorted.length; i++) {
                    obj = sorted[i];
                    canvas.sendToBack(obj);
                }
            } else {
                for (var j = sorted.length - 1; j >= 0; j--) {
                    obj = sorted[j];
                    canvas.sendBackwards(obj);
                }
            }
        };

        // TODO Fabric.js might do this for us now that we've on version >1.5
        vm.sendGroupForward = function (group, top) {
            var sorted = group.objects.slice();
            // Sort the array
            var objects = canvas.getObjects();
            sorted.sort(function (a, b) {
                var z1 = objects.indexOf(a);
                var z2 = objects.indexOf(b);
                return a - b;
            });
            // Change layer of objects one-by-one
            var obj;
            if (top === true) {
                for (var i = sorted.length - 1; i >= 0; i--) {
                    obj = sorted[i];
                    canvas.bringToFront(obj);
                }
            } else {
                for (var j = 0; j < sorted.length; j++) {
                    obj = sorted[j];
                    canvas.bringForward(obj);
                }
            }
        };

        vm.exportFile = function (fileType) {
            canvas.deactivateAll().renderAll();
            var blob = null;
            // Get image data
            if (fileType === "svg") {
                var svg = canvas.toSVG({
                    viewBox: {
                        x: 0,
                        y: 0,
                        width: canvas.width,
                        height: canvas.height
                    }
                });
                blob = new Blob([svg], { type: "image/svg+xml" });
            } else {
                var dataURL = canvas.toDataURL({
                    format: fileType,
                    left: 0,
                    top: 0,
                    width: canvas.width,
                    height: canvas.height,
                    quality: 1.0
                });

                var data = atob(dataURL.replace(/^.*?base64,/, ''));
                var asArray = new Uint8Array(data.length);
                for (var i = 0, len = data.length; i < len; ++i) {
                    asArray[i] = data.charCodeAt(i);
                }
                blob = new Blob([asArray.buffer], { type: "image/" + fileType });
            }
            var formData = new FormData();
            var height = $('input[name="height"]').val();
            var width = $('input[name="width"]').val();
            var jsonWH = { 'width': width, 'height': height };
            console.log(jsonWH);
            var json = canvas.toJSON(['width', 'height', 'lockMovementX', 'lockMovementY', 'lockRotation', 'lockScalingX', 'lockScalingY', 'lockUniScaling']);

            if (json.objects.length == 0) {
                $('body').append('<div class="alert alert-success fade in alert-dismissable ui-alert" > <a href="#" class="close" data-dismiss="alert" aria-label="close" title="close">×</a><div class="alert-inner">Please draw your floor plan before saving</div></div>');
                return;
            }
            json = JSON.stringify(json);

            console.log(json);
            if (spid == "" || spid == "0") {
                spid = null;
            }
            formData.append('file', blob);
            formData.append('spid', spid);
            formData.append('sid', sid);
            formData.append('json', json);
            formData.append('title', title);
            formData.append('desc', desc);
            console.log(formData);
            drawfloorservice.saveFloorPlan(formData).then(function (res) {
                navigation.gotoFloorPlan();
                var spid = res;
                if (spid != "") {
                }
            });
        };

        vm.insertSvg = function (url, loader) {
            loader.removeClass("noshow");
            fabric.loadSVGFromURL(url, function (objects, options) {
                var obj = fabric.util.groupSVGElements(objects, options);
                var scaleFactor = 1;
                if (obj.width > obj.height) {
                    scaleFactor = (canvas.width / 3) / obj.width;
                } else {
                    scaleFactor = (canvas.height / 3) / obj.height;
                }

                obj.set({
                    top: Math.floor(canvas.height / 5),
                    left: Math.floor(canvas.width / 5),
                    scaleY: scaleFactor,
                    scaleX: scaleFactor
                });

                canvas.add(obj);
                obj.perPixelTargetFind = true;
                obj.targetFindTolerance = 4;
                canvas.deactivateAll();
                canvas.setActiveObject(obj);
                canvas.renderAll();
                canvas.trigger("object:statechange");
                loader.addClass("noshow");
            });
        };

        vm.getActiveStyle = function (styleName, object) {
            object = object || canvas.getActiveObject();
            if (typeof object !== 'object' || object === null) {
                return '';
            }
            return (object[styleName] || '');
        };

        vm.setActiveStyle = function (styleName, value, object) {
            object = object || canvas.getActiveObject();
            object[styleName] = value;
        };

        vm.setOutlineColor = function (hex) {
            var object = canvas.getActiveObject();
            if (object) {
                if (object.type === 'i-text' || object.type === 'line') {
                    setActiveStyle('stroke', hex);
                } else {
                    if (!object.paths) {
                        object.setStroke(hex);
                    } else if (object.paths) {
                        for (var i = 0; i < object.paths.length; i++) {
                            object.paths[i].setStroke(hex);
                        }
                    }
                }
                object.customOutlineColor = hex;
            }
        };

        vm.dtEditText = function (action) {
            var a = action;
            var o = canvas.getActiveObject();
            var t;
            if (o) {
                t = o.get('type');
            }
            if (o && t === 'i-text') {
                switch (a) {
                    case 'bold':
                        var isBold = vm.dtGetStyle(o, 'fontWeight') === 'bold';
                        vm.dtSetStyle(o, 'fontWeight', isBold ? '' : 'bold');
                        break;

                    case 'italic':
                        var isItalic = vm.dtGetStyle(o, 'fontStyle') === 'italic';
                        vm.dtSetStyle(o, 'fontStyle', isItalic ? '' : 'italic');
                        break;

                    case 'underline':
                        var isUnderline = vm.dtGetStyle(o, 'textDecoration') === 'underline';
                        vm.dtSetStyle(o, 'textDecoration', isUnderline ? '' : 'underline');
                        break;
                        canvas.renderAll();
                }
            }
        };

        vm.dtGetStyle = function (object, styleName) {
            return object[styleName];
        };

        vm.dtSetStyle = function (object, styleName, value) {
            object[styleName] = value;
            object.set({ dirty: true });
            canvas.renderAll();
        };

        vm.changeOutLine = function (object, styleName, value) {
            object[styleName] = value;
            object.set({ dirty: true });
            canvas.renderAll();
        };

        vm.changeStroke = function (value, action, event) {
            var obj = canvas.getActiveObject();
            if (obj) {
                switch (action) {
                    case 'width':
                        var size = value;
                        obj.set('strokeWidth', size);
                        canvas.renderAll();
                        break;
                    case 'color':
                        $(event.currentTarget).colorpicker().on('changeColor', function () {
                            obj.set('stroke', $(this).colorpicker('getValue', '#ffffff'));

                        });
                        canvas.renderAll();
                        break;
                    case 'opacity':
                        var opacity = value;
                        obj.set('opacity', opacity);
                        canvas.renderAll();
                        break;
                }
            }
        };

        setTimeout(function () {
            init('canvas');
        }, 1000);

        return vm;
    }
})();